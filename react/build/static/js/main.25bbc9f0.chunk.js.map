{"version":3,"sources":["helpers/index.js","components/Board/Cell/index.js","components/Board/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["between","v","a","b","Cell","_classNames","_this$props","this","props","onClick","onContextMenu","visible","marked","value","react_default","createElement","tabIndex","className","classNames","Object","defineProperty","concat","PureComponent","Board","state","board","result","beatingGame","height","width","mines","generateMines","nextProps","setState","rem_squares","rem_mines","resetState","grid","n","m","hasMine","isMarked","isVisible","y","x","Math","random","hidden","window","alert","_this2","_this$state","onGameOver","newBoard","cellValue","onClickZero","beatGame","e","preventDefault","_this$state2","_this$props2","i","j","onClickCell","_this$props3","_this$props4","nearby","row_index","cells","push","Cell_Cell","key","bind","onRightClickCell","rows","renderRow","_this$props5","renderTable","Component","App","form","event","target","type","checked","name","maxMines","placeholder","onChange","handleInputChange","Board_Board","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25bbc9f0.chunk.js","sourcesContent":["/**\n * @returns true if the interval [a,b] contains v\n * @param {Number} v \n * @param {Number} a \n * @param {Number} b \n */\nexport function between(v,a,b) {\n    return (v>=a) && (v<=b);\n};\n\nexport function isCorner(x,y, width, height){\n    if(x>0 && x<width-1){\n        return false;\n    }\n    if(y>0 && y<height-1){\n        return false;\n    }\n    return true;\n}","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\n\nexport default class Cell extends PureComponent {\n\n  render(){\n    const {onClick, onContextMenu, visible, marked, value } = this.props;\n    return (\n      <div\n        tabIndex=\"0\"\n        className={classNames(\n          'Cell',\n          {\n            visible: visible,\n            [`value_${value}`]: visible,\n            hidden: !visible,\n            marked: marked\n          }\n        )}\n        onClick={onClick}\n        onContextMenu={onContextMenu}\n      >\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { between } from '../../helpers';\n\nimport Cell from './Cell';\n\nexport default class Board extends Component {\n\n  state = {\n    board: [],\n    result: 'playing',\n  }\n\n  beatingGame = false;\n\n  componentWillMount(){\n    const { height, width, mines } = this.props;\n    this.generateMines(height, width, mines);\n  }\n\n  componentWillReceiveProps(nextProps) {   \n    const { height, width, mines } = nextProps;\n    this.generateMines(height, width, mines);\n  }\n\n  resetState(){\n    this.setState({\n      board: [],\n      result: 'playing',\n    });\n    this.beatingGame = false;\n  }\n\n  generateMines(height, width, mines) {\n    let rem_squares = height * width;\n    let rem_mines = mines;\n\n    this.resetState();\n\n    let grid = [];\n\n    for (let n = 0; n < width; n++) {\n      grid[n] = [];\n      for (let m = 0; m < height; m++) {\n        grid[n][m] = { hasMine: false, isMarked: false, isVisible: false };\n      }\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if ((rem_mines / rem_squares) >= Math.random()) {\n          rem_mines--;\n          grid[x][y].hasMine = true;\n        }\n        rem_squares--;\n      }\n    }\n    this.hidden = height * width;\n    this.setState({ board: grid })\n  };\n\n  beatGame() {\n    this.setState({ result: 'Win' });\n    if(!this.beatingGame && this.state.result !== 'lost'){\n      this.beatingGame = true;\n      window.alert('You beat the game!');\n    }\n  }\n\n  onClickCell(x, y) {\n    const { mines } = this.props;\n    const { board, result } = this.state;\n    \n    if (result === 'playing') {\n      if(this.isMarked(x, y)){\n        return;\n      }\n      if (board[x][y].hasMine) {\n        this.onGameOver();\n      }\n      let newBoard = board;\n      if(!this.isVisible(x,y)){\n        newBoard[x][y].isVisible = true;\n        this.hidden--;\n      }\n      if (this.cellValue(x, y) === 0) {\n        this.onClickZero(x, y);\n      }\n      this.setState({ board: newBoard }, ()=>{\n        if (this.hidden === mines) {\n          this.beatGame();\n        }\n      });\n    }\n  }\n\n  onRightClickCell(x, y, e){\n    e.preventDefault();\n    const { board, result } = this.state;\n    \n    if (result === 'playing') {\n      board[x][y].isMarked = !board[x][y].isMarked;\n      this.setState({board})\n    }\n  }\n\n  onClickZero(x, y) {\n    const { board } = this.state;\n    const { height, width } = this.props;\n    let newBoard = board;\n    for (let i = -1; i <= 1; i++) {\n      for (let j = -1; j <= 1; j++) {\n        if (between(x + i, 0, width - 1) &&\n          between(y + j, 0, height - 1) &&\n          !this.isVisible(x + i, y + j)\n        ) {\n          if (this.cellValue(x + i, y + j) === 0) {\n            this.onClickCell(x + i, y + j);\n          } else {\n            newBoard[x + i][y + j].isVisible = true;\n            this.hidden--;\n          }\n        }\n      }\n    }\n    this.setState({ board: newBoard });\n  }\n\n  onGameOver() {\n    const { board } = this.state;\n    const { height, width } = this.props;\n    window.alert('Game Over!');\n    let grid = board;\n    for (let n = 0; n < width; n++) {\n      for (let m = 0; m < height; m++) {\n        grid[n][m].isVisible = true;\n      }\n    }\n    this.setState({ board: grid, result: 'lost' })\n  }\n\n  isVisible(x, y) {\n    const { board } = this.state;\n    return board[x][y].isVisible;\n  }\n\n  isMarked(x, y) {\n    const { board } = this.state;\n    return board[x][y].isMarked;\n  }\n\n  cellValue(x, y) {\n    const { height, width } = this.props;\n    const { board } = this.state;\n    if (board[x][y].hasMine) {\n      return 'B';\n    }\n    let nearby = 0;\n    for (let i = -1; i <= 1; i++) {\n      for (let j = -1; j <= 1; j++) {\n        if (between(x + i, 0, width - 1) && between(y + j, 0, height - 1) && board[x + i][y + j].hasMine) {\n          nearby++;\n        }\n      }\n    }\n    return nearby;\n  }\n\n  renderRow(row_index) {\n    const { width } = this.props;\n    const cells = [];\n\n    for (let i = 0; i < width; i++) {\n      cells.push((\n        <Cell\n          key={`cell_${i}_${row_index}`}\n          visible={this.isVisible(i, row_index)}\n          marked={this.isMarked(i, row_index)}\n          value={this.cellValue(i, row_index)}\n          onClick={this.onClickCell.bind(this, i, row_index)}\n          onContextMenu={this.onRightClickCell.bind(this, i, row_index)}\n        />\n      ));\n    }\n\n    return cells;\n  }\n\n  renderTable() {\n    const { height } = this.props;\n    const rows = [];\n    for (let i = 0; i < height; i++) {\n      rows.push((\n        <div className=\"row\" key={`row_${i}`}>{this.renderRow(i)}</div>\n      ));\n    }\n    return (\n      <div className=\"Board\">\n        {rows}\n      </div>\n    );\n  }\n\n  render() {\n    const { height, width } = this.props;\n    return (\n      <div>\n        <h1>table {height}x{width}</h1>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nBoard.propTypes = {\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  mines: PropTypes.number.isRequired,\n}","import React, { Component } from 'react';\nimport Board from '../Board';\n\nclass App extends Component {\n  state = {\n    height: 10,\n    width: 10,\n    mines: 10,\n  };\n\n  form = {\n    height: 10,\n    width: 10,\n    mines: 10,\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    let value = target.type === 'checkbox' ? target.checked : +target.value;\n    const name = target.name;\n    if ((name === 'height' || name === 'width') && value > 50) {\n      value = 50;\n    }\n    if (name === 'mines') {\n      const maxMines = this.form.width * this.form.height;\n      if (value > maxMines) {\n        value = maxMines;\n      }\n    }\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const { height, width, mines } = this.state;\n    return (\n      <div className=\"App\">\n        <form>\n          <label>\n            Height:\n            <input\n              type=\"number\"\n              name=\"height\"\n              placeholder=\"height\"\n              value={height}\n              onChange={this.handleInputChange.bind(this)}\n            />\n          </label>\n          <br />\n          <label>\n            Width:\n            <input\n              type=\"number\"\n              name=\"width\"\n              placeholder=\"width\"\n              value={width}\n              onChange={this.handleInputChange.bind(this)}\n            />\n          </label>\n          <br />\n          <label>\n            Mines:\n            <input\n              type=\"number\"\n              name=\"mines\"\n              placeholder=\"mines\"\n              value={mines}\n              onChange={this.handleInputChange.bind(this)}\n            />\n          </label>\n        </form>\n        <Board height={this.state.height} width={this.state.width} mines={this.state.mines} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}