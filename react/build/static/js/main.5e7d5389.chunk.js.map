{"version":3,"sources":["helpers/index.js","components/Board/Cell/index.js","components/Board/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["between","v","a","b","noCorners","x","y","width","height","Cell","_this$props","this","props","visible","marked","value","classString","concat","_this$props2","onClick","onContextMenu","react_default","createElement","tabIndex","className","Component","Board","state","board","result","beatingGame","mines","generateMines","nextProps","setState","rem_squares","rem_mines","grid","n","m","hasMine","isMarked","isVisible","Math","random","hidden","window","alert","_this2","_this$state","onGameOver","newBoard","cellValue","onClickZero","beatGame","e","preventDefault","_this$state2","i","j","onClickCell","_this$props3","_this$props4","nearby","row_index","cells","push","Cell_Cell","key","bind","onRightClickCell","rows","renderRow","_this$props5","renderTable","App","form","event","target","type","checked","name","Object","defineProperty","placeholder","onChange","handleInputChange","Board_Board","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e7d5389.chunk.js","sourcesContent":["/**\n * @returns true if the interval [a,b] contains v\n * @param {Number} v \n * @param {Number} a \n * @param {Number} b \n */\nexport function between(v,a,b) {\n    return (v>=a) && (v<=b);\n};\n\nexport function noCorners(x,y, width, height){\n    if(x>0 && x<width-1){\n        return true;\n    }\n    if(y>0 && y<height-1){\n        return true;\n    }\n    return false;\n}","import React, { Component } from 'react';\n\nimport './styles.scss';\n\nexport default class Cell extends Component {\n\n  className(){\n    const {visible, marked, value } = this.props;\n    let classString = \"\";\n    if(visible){\n      classString += `visible value_${value}`;\n    } else if(marked){\n      classString += 'hidden marked '\n    } else {\n      classString += 'hidden'\n    }\n    return classString;\n  }\n\n  render(){\n    const {onClick, onContextMenu } = this.props;\n    return (\n      <td\n        tabIndex=\"0\"\n        className={this.className()}\n        onClick={onClick}\n        onContextMenu={onContextMenu}\n      >\n      </td>\n    );\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { between, noCorners } from '../../helpers';\n\nimport Cell from './Cell';\n\nimport './styles.scss';\n\nexport default class Board extends Component {\n\n  state = {\n    board: [],\n    result: 'playing',\n  }\n\n  beatingGame = false;\n\n  componentWillMount(){\n    const { height, width, mines } = this.props;\n    this.generateMines(height, width, mines);\n  }\n\n  componentWillReceiveProps(nextProps) {   \n    const { height, width, mines } = nextProps;\n    this.generateMines(height, width, mines);\n  }\n\n  resetState(){\n    this.setState({\n      board: [],\n      result: 'playing',\n    });\n    this.beatingGame = false;\n  }\n\n  generateMines(height, width, mines) {\n    let rem_squares = height * width;\n    let rem_mines = mines;\n\n    let grid = [];\n\n    for (let n = 0; n < width; n++) {\n      grid[n] = [];\n      for (let m = 0; m < height; m++) {\n        grid[n][m] = { hasMine: false, isMarked: false, isVisible: false };\n      }\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (\n          (rem_mines / rem_squares) >= Math.random() &&\n          noCorners(x, y, width, height)\n        ) {\n          rem_mines--;\n          grid[x][y].hasMine = true;\n        }\n        rem_squares--;\n      }\n    }\n    this.hidden = height * width;\n    this.setState({ board: grid })\n  };\n\n  beatGame() {\n    this.setState({ result: 'Win' });\n    if(!this.beatingGame){\n      this.beatingGame = true;\n      window.alert('You beat the game!');\n    }\n  }\n\n  onClickCell(x, y) {\n    const { mines } = this.props;\n    const { board, result } = this.state;\n    \n    if (result === 'playing') {\n      if(this.isMarked(x, y)){\n        return;\n      }\n      if (board[x][y].hasMine) {\n        this.onGameOver();\n      }\n      let newBoard = board;\n      if(!this.isVisible(x,y)){\n        newBoard[x][y].isVisible = true;\n        this.hidden--;\n      }\n      if (this.cellValue(x, y) === 0) {\n        this.onClickZero(x, y);\n      }\n      this.setState({ board: newBoard }, ()=>{\n        if (this.hidden === mines) {\n          this.beatGame();\n        }\n      });\n    }\n  }\n\n  onRightClickCell(x, y, e){\n    e.preventDefault();\n    const { board, result } = this.state;\n    \n    if (result === 'playing') {\n      board[x][y].isMarked = !board[x][y].isMarked;\n      this.setState({board})\n    }\n  }\n\n  onClickZero(x, y) {\n    const { board } = this.state;\n    const { height, width } = this.props;\n    let newBoard = board;\n    for (let i = -1; i <= 1; i++) {\n      for (let j = -1; j <= 1; j++) {\n        if (between(x + i, 0, width - 1) &&\n          between(y + j, 0, height - 1) &&\n          !this.isVisible(x + i, y + j)\n        ) {\n          if (this.cellValue(x + i, y + j) === 0) {\n            this.onClickCell(x + i, y + j);\n          } else {\n            newBoard[x + i][y + j].isVisible = true;\n            this.hidden--;\n          }\n        }\n      }\n    }\n    this.setState({ board: newBoard });\n  }\n\n  onGameOver() {\n    const { board } = this.state;\n    const { height, width } = this.props;\n    window.alert('Game Over!');\n    let grid = board;\n    for (let n = 0; n < width; n++) {\n      for (let m = 0; m < height; m++) {\n        grid[n][m].isVisible = true;\n      }\n    }\n    this.setState({ board: grid, result: 'lost' })\n  }\n\n  isVisible(x, y) {\n    const { board } = this.state;\n    return board[x][y].isVisible;\n  }\n\n  isMarked(x, y) {\n    const { board } = this.state;\n    return board[x][y].isMarked;\n  }\n\n  cellValue(x, y) {\n    const { height, width } = this.props;\n    const { board } = this.state;\n    if (board[x][y].hasMine) {\n      return 'B';\n    }\n    let nearby = 0;\n    for (let i = -1; i <= 1; i++) {\n      for (let j = -1; j <= 1; j++) {\n        if (between(x + i, 0, width - 1) && between(y + j, 0, height - 1) && board[x + i][y + j].hasMine) {\n          nearby++;\n        }\n      }\n    }\n    return nearby;\n  }\n\n  renderRow(row_index) {\n    const { width } = this.props;\n    const cells = [];\n\n    for (let i = 0; i < width; i++) {\n      cells.push((\n        <Cell\n          key={`cell_${i}_${row_index}`}\n          visible={this.isVisible(i, row_index)}\n          marked={this.isMarked(i, row_index)}\n          value={this.cellValue(i, row_index)}\n          onClick={this.onClickCell.bind(this, i, row_index)}\n          onContextMenu={this.onRightClickCell.bind(this, i, row_index)}\n        />\n      ));\n    }\n\n    return cells;\n  }\n\n  renderTable() {\n    const { height } = this.props;\n    const rows = [];\n    for (let i = 0; i < height; i++) {\n      rows.push((\n        <tr key={`row_${i}`}>{this.renderRow(i)}</tr>\n      ));\n    }\n    return (\n      <table className=\"Board\">\n        <tbody>{rows}</tbody>\n      </table>\n    );\n  }\n\n  render() {\n    const { height, width } = this.props;\n    return (\n      <div>\n        <h1>table {height}x{width}</h1>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nBoard.propTypes = {\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  mines: PropTypes.number.isRequired,\n}","import React, { Component } from 'react';\nimport './styles.scss';\nimport Board from '../Board';\n\nclass App extends Component {\n  state = {\n    height: 10,\n    width: 10,\n    mines: 10,\n  };\n\n  form = {\n    height: 10,\n    width: 10,\n    mines: 10,\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    let value = target.type === 'checkbox' ? target.checked : +target.value;\n    const name = target.name;\n    if ((name === 'height' || name === 'width') && value > 50) {\n      value = 50;\n    }\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const { height, width, mines } = this.state;\n    return (\n      <div className=\"App\">\n        <form>\n          <label>\n            Height:\n            <input\n              type=\"number\"\n              name=\"height\"\n              placeholder=\"height\"\n              value={height}\n              onChange={this.handleInputChange.bind(this)}\n            />\n          </label>\n          <br />\n          <label>\n            Width:\n            <input\n              type=\"number\"\n              name=\"width\"\n              placeholder=\"width\"\n              value={width}\n              onChange={this.handleInputChange.bind(this)}\n            />\n          </label>\n          <br />\n          <label>\n            Mines:\n            <input\n              type=\"number\"\n              name=\"mines\"\n              placeholder=\"mines\"\n              value={mines}\n              onChange={this.handleInputChange.bind(this)}\n            />\n          </label>\n        </form>\n        <Board height={this.state.height} width={this.state.width} mines={this.state.mines} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}